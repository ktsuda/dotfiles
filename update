#!/usr/bin/env bash

DOTFILES_DIR=$(dirname "$(readlink "$0" || echo "$0")")

DELETE=0
INSTALL=1
STOW_FOLDERS=()

function set_stow_folders() {
    while [[ $# -gt 0 ]]; do
        case $1 in
            -D | --delete)
                DELETE=1
                INSTALL=0
                shift
                ;;
            -U | --update)
                DELETE=1
                INSTALL=1
                shift
                ;;
            -h | --help)
                usage
                exit 1
                ;;
            -p | --private)
                reset
                private
                shift
                ;;
            -s | --shared)
                reset
                shared
                shift
                ;;
            -a | --all)
                all
                exit 1
                ;;
            *)
                STOW_FOLDERS+=("$1")
                shift
                ;;
        esac
    done

    if [[ ${#STOW_FOLDERS[@]} -eq 0 ]]; then
        STOW_FOLDERS=($(/bin/ls -d -- */ | sed 's/\///g'))
    fi
}

function all() {
    ALL_FOLDERS="$(/bin/ls -d -- */ | tr '\n' ' ' | sed 's/\///g')"
    echo "$ALL_FOLDERS"
}

function reset() {
    STOW_FOLDERS=()
}

function shared() {
    case ${OSTYPE} in
        darwin*)
            STOW_FOLDERS=(zsh tmux git tig nvim)
            ;;
        linux-gnu*)
            STOW_FOLDERS=(bash tmux git tig nvim)
            ;;
        *)
            reset
            ;;
    esac
}

function private() {
    case ${OSTYPE} in
        darwin*)
            STOW_FOLDERS=(zsh ripgrep tmux git-private tig nvim alacritty alacritty-macos iterm2 bat wakatime zathura w3m-macos eza clang-format)
            ;;
        linux-gnu*)
            STOW_FOLDERS=(zsh ripgrep tmux git-private tig nvim alacritty alacritty-linux bat wakatime zathura w3m-linux i3 wofi eza clang-format)
            ;;
        *)
            reset
            ;;
    esac
}

function usage() {
    cat << EOF
usage: $(basename "${0}") [--help] [--list] [--update | --delete]
                        [--private | --shared] [dirs]

options:
    --help,    -h     print this
    --delete,  -D     delete dotfiles
    --private, -p     select dotfiles for a private host
    --shared,  -s     select dotfiles for a shared host

EOF
}

function update() {
    for folder in "${STOW_FOLDERS[@]}"; do
        if [[ ${DELETE} -eq 1 ]]; then
            printf "Deleting %-17s" "$folder"
            stow -t "$HOME" -D "$folder" 2> /dev/null
        fi
        if [[ ${INSTALL} -eq 1 ]]; then
            printf "Installing %-17s" "$folder"
            stow --ignore='\.DS_Store' -t "$HOME" "$folder"
        fi
        echo " ...   Done"
    done
}

function main() {
    pushd "$DOTFILES_DIR" > /dev/null || exit
    set_stow_folders "$@"
    update
    popd > /dev/null || exit
}

main "$@"
